# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022 Intel Corporation

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: adq-cni-dp
  namespace: kube-system
spec:
  selector:
      matchLabels:
        name: adq-cni-dp
  template:
    metadata:
      labels:
        name: adq-cni-dp
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccountName: adq
      initContainers:
      - name: install-cni
        image: <YOUR_REGISTRY>/adq-cni-dp:22.06-1
        command: [ "sh", "-c", "cp -f /adq-cni /opt/cni/bin/adq-cni" ]
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: cni
          mountPath: /opt/cni/bin
      - name: configs
        image: <YOUR_REGISTRY>/adq-cni-dp:22.06-1
        command: ["sh", "-c", "/entrypoint.sh"]
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
        - name: cni-cfg
          mountPath: /host/etc/cni/net.d/
        - name: adq-cluster-config
          mountPath: /etc/adq
        - name: adqsetup-config
          mountPath: /adqsetup-config
        - name: configs-tmp
          mountPath: /configs-tmp
      - name: adqsetup
        image: <YOUR_REGISTRY>/adqsetup:22.06-1
        command: ["adqsetup", "apply", "/adqsetup-config/adqsetup.conf"]
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
          privileged: true
        volumeMounts:
        - name: adqsetup-config
          mountPath: /adqsetup-config
          readOnly: true
      containers:
      - name: deviceplugin
        image: <YOUR_REGISTRY>/adq-cni-dp:22.06-1
        args:
        - -reconcile-period=35s
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: device-plugins
          mountPath: /var/lib/kubelet/device-plugins
        - name: sys-devices
          mountPath: /sys/devices/
          readOnly: true
        - name: sys-class-net
          mountPath: /sys/class/net/
          readOnly: true
        - name: cni-cfg
          mountPath: /etc/cni/net.d/
          readOnly: true
      - name: adq-netprio
        image: <YOUR_REGISTRY>/adq-cni-dp:22.06-1
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          readOnlyRootFilesystem: true
        command: ["/adq-netprio"]
        args:
        - -cni-config-path=/etc/cni/net.d/05-cilium.conflist
        - -reconcile-period=2s
        volumeMounts:
        - mountPath: /sys/fs/cgroup
          name: cgroupfs
        - mountPath: /var/lib/kubelet/pod-resources/kubelet.sock
          name: pod-resources
          readOnly: true
        - name: cni-cfg
          mountPath: /etc/cni/net.d/
          readOnly: true
        - name: kubelet-pki
          mountPath: /var/lib/kubelet/pki/kubelet.crt
          readOnly: true
      volumes:
      - name: device-plugins
        hostPath:
          path: /var/lib/kubelet/device-plugins
      - name: pod-resources
        hostPath:
          path: /var/lib/kubelet/pod-resources/kubelet.sock
          type: Socket
      - name: cni
        hostPath:
          path: /opt/cni/bin
      - name: cni-cfg
        hostPath:
          path: /etc/cni/net.d/
      - name: sys-devices
        hostPath:
          path: /sys/devices/
      - name: sys-class-net
        hostPath:
          path: /sys/class/net/
      - name: cgroupfs
        hostPath:
          path: /sys/fs/cgroup
      - name: kubelet-pki
        hostPath:
          path: /var/lib/kubelet/pki/kubelet.crt
          type: File
      - name: adq-cluster-config
        configMap:
          name: adq-cluster-config
      - name: adqsetup-config
        emptyDir: {}
      - name: configs-tmp
        emptyDir: {}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adq
rules:
  - apiGroups: [""]
    resources:
      - nodes/proxy
    verbs:
      - get
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - list

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: adq
subjects:
- kind: ServiceAccount
  name: adq
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adq
  namespace: kube-system
